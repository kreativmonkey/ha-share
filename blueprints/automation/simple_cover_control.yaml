blueprint:
  name: Simple Cover Control
  description: >
    Dieses Blueprint ist zur einfachen Steuerung der Rolladen da ich mit dem Blueprint aus dem Home Assistant Forum kein erfolg hatte.
  domain: automation

  input:
    cover_device:
      name: Rolladen
      description: "Wähle den zu steuernde Rolladen."
      selector:
        entity:
          filter:
            - domain:
              - cover

    timer_section:
      name: Time control Configuration
      icon: mdi:clock-time-two-outline
      collapsed: true
      input:
        workday_sensor:
          name: "\U0001F4BC Sensor For Workday Today"
          description: 'It may be desired to open a cover at a different time on work
            days than on non-work days. The corresponding binary sensor can be defined
            here. If not set, the cover will open every time at time_up_early. <br
            /><br /> I recommend using the [Workday integration](https://www.home-assistant.io/integrations/workday/).
            <br /><br /> Example: `binary_sensor.workday_today` <br /><br />`Optional`'
          default: []
          selector:
            entity:
              filter:
              - domain:
                - binary_sensor
              multiple: false
        workday_sensor_tomorrow:
          name: "\U0001F4BC Sensor For Workday Tomorrow (only for closing)"
          description: 'When <ins>closing</ins> the blinds, you have the option of
            checking the times for tomorrow rather than the current day. This has
            the advantage that you can <ins>close</ins> the blinds earlier if <ins>tomorrow</ins>
            is a working day. This makes sense if, for example, there is school tomorrow
            but today is actually still the weekend. But the child has to go to bed
            earlier.<br /> If this field is not configured here, the normal working
            day sensor is used. <br /><br /> I recommend using the [Workday integration](https://www.home-assistant.io/integrations/workday/).
            <br /><br /> Example: `binary_sensor.workday_tomorrow` <br /><br />`Optional`'
          default: []
          selector:
            entity:
              filter:
              - domain:
                - binary_sensor
              multiple: false
        time_up_early:
          name: "\U0001F53C Time For Drive Up - Early On Workdays"
          description: 'The earliest time at which the cover may be opened. The cover
            will be opened if <ins>AFTER</ins> this time the defined brightness or
            sun-elevation value is high enough. (**NOTE**: A resident must also be
            awake if one is defined).'
          default: 06:00:00
          selector:
            time: {}
        time_up_early_non_workday:
          name: "\U0001F53C Time For Drive Up - Early On Non-Workdays"
          description: As directly above, but for non-workdays.
          default: 07:00:00
          selector:
            time: {}
        time_up_late:
          name: "\U0001F53C Time For Drive Up - Late On Workdays"
          description: 'The latest time at which the cover should be opened. If the
            required brightness or sun-elevation value has <ins>NOT</ins> yet been
            reached by this time, the cover will still be opened. (**NOTE**: If a
            resident has been defined and the resident is still asleep, then the cover
            will NOT be opened.)'
          default: 08:00:00
          selector:
            time: {}
        time_up_late_non_workday:
          name: "\U0001F53C Time For Drive Up - Late On Non-Workdays"
          description: As directly above, but for non-workdays.
          default: 08:00:00
          selector:
            time: {}
        time_down_early:
          name: "\U0001F53B Time For Drive Down - Early On Workdays"
          description: The earliest time at which the cover may be closed. The cover
            will be closed if <ins>AFTER</ins> this time the defined brightness or
            sun-elevation value is low enough.
          default: '16:00:00'
          selector:
            time: {}
        time_down_early_non_workday:
          name: "\U0001F53B Time For Drive Down - Early On Non-Workdays"
          description: As directly above, but for non-workdays.
          default: '16:00:00'
          selector:
            time: {}
        time_down_late:
          name: "\U0001F53B Time For Drive Down - Late On Workdays"
          description: The latest time at which the cover should be closed. If the
            required brightness or sun-elevation value has <ins>NOT</ins> yet been
            reached by this time, the cover will still be closed. <br /> Please do
            not enter 0:00, because that would be the next day!
          default: '22:00:00'
          selector:
            time: {}
        time_down_late_non_workday:
          name: "\U0001F53B Time For Drive Down - Late On Non-Workdays"
          description: As directly above, but for non-workdays. <br /> Please do not
            enter 0:00, because that would be the next day!
          default: '22:00:00'
          selector:
            time: {}
        
trigger_variables:
  cover_device: !input cover_device

variables:
  time_down_early: !input time_down_early
  time_down_late: !input time_down_late
  time_up_early: !input time_up_early
  time_up_late: !input time_up_late
  trigger_time_down: >-
    {{ true if now() >= today_at(time_down_early) else false}}
  trigger_time_up: >-
    {{ true if now() >= today_at(time_up_early) else false }}

mode: restart
max_exceeded: silent

triggers:
  - trigger: state
    entity_id: sun.sun


action:
  - choose:
    - alias: Rolladen schließen
      conditions:
        - condition: or
          conditions:
          - condition: and 
            conditions:
              # Wenn die sonne unterm Horizont sowie
              # time_down_early ist überschritten
              - condition: state
                entity_id: sun.sun
                state: 'below_horizon'
              - condition: template
                value_template: "{{ trigger_time_down }}"
          - condition: template
            value_template: "{{ today_at(time_down_late) <= now() }}"
      sequence:
        - action: cover.close_cover
          entity_id: !input cover_device

    - alias: Rolladen öffnen
      conditions:
        - condition: or
          conditions:
          - condition: and 
            conditions:
              # Wenn die sonne unterm Horizont sowie
              # time_down_early ist überschritten
              - condition: state
                entity_id: sun.sun
                state: 'above_horizon'
              - condition: template
                value_template: "{{ trigger_time_up }}"
          - condition: template
            value_template: "{{ today_at(time_up_late) <= now() }}"
      sequence:
        - action: cover.open_cover
          entity_id: !input cover_device
    